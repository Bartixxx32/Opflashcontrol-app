name: Build OnePlus Flash Control

env:
  main_project_module: app
  playstore_name: Bartixxx

on:
  push:
    branches:
      - 'master'
      - '**'  # Trigger for all branches
  pull_request:
    branches:
      - '**'  # Trigger for all branches
  workflow_dispatch:
    inputs:
      prerelease:
        description: 'Mark as Pre-release'
        required: false
        type: boolean
      publish:
        description: 'Publish release'
        required: false
        type: boolean
        default: true

jobs:
  build:
    runs-on: ubuntu-24.04

    steps:
      - uses: actions/checkout@v4

      # Set current date and repository name as environment variables
      - name: Set environment variables
        run: |
          echo "date_today=$(date +'%Y-%m-%d')" >> $GITHUB_ENV
          echo "repository_name=$(echo '${{ github.repository }}' | awk -F '/' '{print $2}')" >> $GITHUB_ENV

      # Set up JDK for Gradle build
      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: '24'
          cache: 'gradle'

      - name: Change wrapper permissions
        run: chmod +x ./gradlew

      # Run Gradle tests and build the project
      - name: Run tests and build project
        run: |
          ./gradlew test
          ./gradlew build

      # Build APK release
      - name: Build APK release
        run: ./gradlew assembleRelease

        

      # Get the current version from Gradle
      - name: Get current version
        id: version-env
        run: |
          ./gradlew getVersion
          echo "version=$(cat app/build/version.txt)" >> $GITHUB_ENV

      # Sign APK release
      - uses: r0adkll/sign-android-release@v1
        name: Sign APK
        id: sign_app
        with:
          releaseDirectory: app/build/outputs/apk/release
          signingKeyBase64: ${{ secrets.KEYSTORE_FILE }}
          alias: ${{ secrets.KEY_ALIAS }}
          keyStorePassword: ${{ secrets.KEYSTORE_PASSWORD }}
          keyPassword: ${{ secrets.KEY_PASSWORD }}
        env:
          BUILD_TOOLS_VERSION: "34.0.0"

      # Upload signed APK as artifact
      - uses: actions/upload-artifact@v4
        with:
          name: OnePlus Flash Control APK
          path: ${{ steps.sign_app.outputs.signedReleaseFile }}

      # Publish APK to GitHub Releases only for master branch
      - name: Publish APK
        if: github.ref == 'refs/heads/master'  # Only publish for master branch
        uses: softprops/action-gh-release@v2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          prerelease: ${{ inputs.prerelease || 'true' }}  # Default to 'true' if no input is provided
          files: ${{ steps.sign_app.outputs.signedReleaseFile }}
          tag_name: v${{ env.version }}

      # Upload APK to Appetize with retry mechanism
      - name: Upload to Appetize
        run: |
          for i in {1..5}; do
            response=$(curl -X POST https://api.appetize.io/v1/apps \
              -H "Content-Type: application/json" \
              -d '{
                "token": "${{ secrets.APPETIZE_API_TOKEN }}",
                "url": "https://github.com/${{ github.repository }}/releases/download/v${{ env.version }}/app-release-signed.apk",
                "platform": "android",
                "note": "Updated to version ${{ env.version }}"
              }' -w "%{http_code}" -o response.json)
            if [ "$response" -eq 200 ]; then
              echo "Upload successful"
              break
            else
              echo "Upload failed, retrying in 30 seconds..."
              sleep 30
            fi
          done
